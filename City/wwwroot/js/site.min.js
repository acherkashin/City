class NetClient{constructor(n){this.options=n;var t=new signalR.HttpConnection(n.hubUrl);this.hubConnection=new signalR.HubConnection(t);this.configureMethods();this.hubConnection.start();this.options&&this.options.host&&this.configurePackagesList()}configureMethods(){this.hubConnection.on("onRecievePackage",n=>{console.dir(n),this.packagesList&&this.packagesList.packages&&this.packagesList.packages.push(n),this.options.onRecievePackage&&this.options.onRecievePackage(n)});this.hubConnection.on("onUpdateOnlineList",n=>{console.dir(n),this.options.onUpdateOnlineList&&this.options.onUpdateOnlineList(n)});this.hubConnection.on("onStateChanged",n=>{this.options.onStateChanged&&this.options.onStateChanged(n)})}configurePackagesList(){this.packagesList=new Vue({el:this.options.host,data:{packages:[]},methods:{update:function(){axios.get("/api/network/packages").then(n=>{this.packages=n.data})}},template:`
            <div class="package-list">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Отправитель</th>
                            <th>Получатель</th>
                            <th>Метод</th>
                            <th>Параметры</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="package in packages">
                            <td> {{package.from}} </td>
                            <td> {{package.to}} </td>
                            <td> {{package.method}} </td>
                            <td> {{package.params}} </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            `});this.packagesList.update()}}class OnlineList{constructor(n){this.options=n;this.render();n.host&&this.options.host.append(this.$view)}render(){this.$view=$($.parseHTML(`<table class="online-users table table-striped">
                <thead>
                    <tr>
                        <th>Статус</th>
                        <th>Имя</th>
                        <th>Фамилия</th>
                        <th>Логин</th>
                        <th>Объект</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>`));this.renderList()}renderList(){(this.options.users||[]).map(n=>this.$view.find("tbody").empty().append(this.createRow(n)))}createRow(n){return $($.parseHTML(`<tr class="online-user">
            <td class="online-user__status online-user__status--${n.isOnline?"online":"offline"}" title="${n.isOnline?"online":"offline"}"></td>
            <td>${n.firstName}</td>
            <td>${n.lastName}</td>
            <td>${n.login}</td>
            <td>${n.subjectName}</td>
        </tr>`))}updateUsers(n){this.options.users=n;this.renderList()}}Vue.component("arduino-panel",{props:["url"],data:function(){return{arduinoUrl:this.url}},methods:{updateUrl:function(){axios.put("/api/account/update-arduino-url",{arduinoUrl:this.arduinoUrl}).then(n=>{console.log(n)})}},template:`<div class="arduino-panel">
                    <label for="arduino-url">URL-адрес макета:</label>
                    <input id="arduino-url" type="url" v-model="arduinoUrl"/>
                    <button v-on:click="updateUrl" class="btn btn-primary">Обновить</button>
                </div>`});